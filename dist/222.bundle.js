"use strict";(self.webpackChunkreact_node=self.webpackChunkreact_node||[]).push([[222],{6198:function(n,r,e){e.r(r);var t=e(7294),a=e(9250),o=e(9655);e(8723);function l(n,r){return function(n){if(Array.isArray(n))return n}(n)||function(n,r){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==e)return;var t,a,o=[],l=!0,i=!1;try{for(e=e.call(n);!(l=(t=e.next()).done)&&(o.push(t.value),!r||o.length!==r);l=!0);}catch(n){i=!0,a=n}finally{try{l||null==e.return||e.return()}finally{if(i)throw a}}return o}(n,r)||function(n,r){if(!n)return;if("string"==typeof n)return i(n,r);var e=Object.prototype.toString.call(n).slice(8,-1);"Object"===e&&n.constructor&&(e=n.constructor.name);if("Map"===e||"Set"===e)return Array.from(n);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return i(n,r)}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(n,r){(null==r||r>n.length)&&(r=n.length);for(var e=0,t=new Array(r);e<r;e++)t[e]=n[e];return t}r.default=function(){var n=(0,a.s0)(),r=l((0,t.useState)(!0),2),e=r[0],i=r[1],u=l((0,t.useState)(window.location.pathname),2),c=u[0],s=u[1],A=l((0,t.useState)(!0),2),f=A[0],d=A[1],p=(0,t.useCallback)((function(){localStorage.removeItem("token"),i(!1),n("/")}),[n]);return(0,t.useEffect)((function(){e||(s("/"),d(!0))}),[e,c]),t.createElement("div",{className:"nav-wrapper"},t.createElement("div",{className:"container"},t.createElement("nav",{className:"nav"},t.createElement("p",null,"User Page"),t.createElement("div",null,"/user-account"!==c?t.createElement(t.Fragment,null,f?t.createElement(o.rU,{to:"/registration",onClick:function(){return d(!1)}},"sign up"):t.createElement(o.rU,{to:"/",onClick:function(){return d(!0)}},"sign in")):t.createElement("div",{onClick:function(){return p()}},"Logout")))))}},5227:function(n,r,e){e.r(r);var t=e(7537),a=e.n(t),o=e(3645),l=e.n(o)()(a());l.push([n.id,".nav-wrapper {\r\n    border: 1px solid #686868;\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n    margin-top: 5px;\r\n    background-color: #222935;\r\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.nav {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 30px;\r\n    color: rgb(255, 255, 255);\r\n}\r\n\r\n.nav a {\r\n    color: rgb(255, 255, 255);\r\n    text-decoration: none;\r\n}\r\n\r\n.nav p {\r\n    font-size: 18px;\r\n}","",{version:3,sources:["webpack://./src/components/Nav/Nav.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,eAAe;IACf,mBAAmB;IACnB,eAAe;IACf,yBAAyB;IACzB,yCAAyC;AAC7C;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;IACzB,qBAAqB;AACzB;;AAEA;IACI,eAAe;AACnB",sourcesContent:[".nav-wrapper {\r\n    border: 1px solid #686868;\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n    margin-top: 5px;\r\n    background-color: #222935;\r\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.nav {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 30px;\r\n    color: rgb(255, 255, 255);\r\n}\r\n\r\n.nav a {\r\n    color: rgb(255, 255, 255);\r\n    text-decoration: none;\r\n}\r\n\r\n.nav p {\r\n    font-size: 18px;\r\n}"],sourceRoot:""}]),r.default=l},8723:function(n,r,e){var t=e(3379),a=e.n(t),o=e(7795),l=e.n(o),i=e(569),u=e.n(i),c=e(3565),s=e.n(c),A=e(9216),f=e.n(A),d=e(4589),p=e.n(d),m=e(5227),v={};v.styleTagTransform=p(),v.setAttributes=s(),v.insert=u().bind(null,"head"),v.domAPI=l(),v.insertStyleElement=f();var b=a()(m.default,v);if(!m.default.locals||n.hot.invalidate){var y=!m.default.locals,g=y?m:m.default.locals;n.hot.accept(5227,function(r){m=e(5227),function(n,r,e){if(!n&&r||n&&!r)return!1;var t;for(t in n)if((!e||"default"!==t)&&n[t]!==r[t])return!1;for(t in r)if(!(e&&"default"===t||n[t]))return!1;return!0}(g,y?m:m.default.locals,y)?(g=y?m:m.default.locals,b(m.default)):n.hot.invalidate()}.bind(this))}n.hot.dispose((function(){b()}));m.default&&m.default.locals&&m.default.locals}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,